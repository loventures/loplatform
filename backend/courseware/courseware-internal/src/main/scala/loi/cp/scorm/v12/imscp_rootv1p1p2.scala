// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package loi.cp
package scorm
package v12

/** DRAFT XSD for IMS Content Packaging version 1.1 DRAFT Copyright (c) 2001 IMS GLC, Inc. 2000-04-21, Adjustments by
  * T.D. Wason from CP 1.0.2001-02-22, T.D.Wason: Modify for 2000-10-24 XML-Schema version. Modified to support
  * extension.2001-03-12, T.D.Wason: Change filename, target and meta-data namespaces and meta-data fielname. Add
  * meta-data to itemType, fileType and organizationType.Do not define namespaces for xml in XML instances generated
  * from this xsd.Imports IMS meta-data xsd, lower case element names. This XSD provides a reference to the IMS
  * meta-data root element as imsmd:recordIf the IMS meta-data is to be used in the XML instance then the instance must
  * define an IMS meta-data prefix with a namespace. The meta-data targetNamespace should be used. 2001-03-20, Thor
  * Anderson: Remove manifestref, change resourceref back to identifierref, change manifest back to contained by
  * manifest. --Tom Wason: manifest may contain _none_ or more manifests.2001-04-13 Tom Wason: corrected attirbute name
  * structure. Was misnamed type. 2001-05-14 Schawn Thropp: Made all complexType extensible with the group.anyAdded the
  * anyAttribute to all complexTypes. Changed the href attribute on the fileType and resourceType to xsd:stringChanged
  * the maxLength of the href, identifierref, parameters, structure attributes to match the Information model.2001-07-25
  * Schawn Thropp: Changed the namespace for the Schema of Schemas to the 5/2/2001 W3C XML SchemaRecommendation.
  * attributeGroup attr.imsmd deleted, was not used anywhere. Any attribute declarations that haveuse = "default"
  * changed to use="optional" - attr.structure.req.Any attribute declarations that have value="somevalue" changed to
  * default="somevalue",attr.structure.req (hierarchical). Removed references to IMS MD Version 1.1.Modified attribute
  * group "attr.resourcetype.req" to change use from optionalto required to match the information model. As a result the
  * default value also needed to be removedName change for XSD. Changed to match version of CP Spec
  */

case class DependencyType(
  grpu46anySequence1: scorm.v12.Grpu46anySequence,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty
):
  lazy val identifierref = attributes("@identifierref").as[String]

case class FileType(
  metadata: Option[scorm.v12.MetadataType] = None,
  grpu46anySequence2: scorm.v12.Grpu46anySequence,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty
):
  lazy val href = attributes("@href").as[java.net.URI]

case class ItemType(
  title: Option[String] = None,
  item: Seq[scorm.v12.ItemType] = Nil,
  metadata: Option[scorm.v12.MetadataType] = None,
  grpu46anySequence4: scorm.v12.Grpu46anySequence,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty
):
  lazy val identifier    = attributes("@identifier").as[String]
  lazy val identifierref = attributes.get("@identifierref") map { _.as[String] }
  lazy val isvisible     = attributes.get("@isvisible") map { _.as[Boolean] }
  lazy val parameters    = attributes.get("@parameters") map { _.as[String] }
end ItemType

case class ManifestType(
  metadata: Option[scorm.v12.MetadataType] = None,
  organizations: scorm.v12.OrganizationsType,
  resources: scorm.v12.ResourcesType,
  manifest: Seq[scorm.v12.ManifestType] = Nil,
  grpu46anySequence5: scorm.v12.Grpu46anySequence,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty
):
  lazy val identifier = attributes("@identifier").as[String]
  lazy val version    = attributes.get("@version") map { _.as[String] }
  lazy val xmlbase    = attributes.get("@{http://www.w3.org/XML/1998/namespace}base") map { _.as[java.net.URI] }
end ManifestType

case class MetadataType(
  schema: Option[String] = None,
  schemaversion: Option[String] = None,
  grpu46anySequence3: scorm.v12.Grpu46anySequence
)

case class OrganizationsType(
  organization: Seq[scorm.v12.OrganizationType] = Nil,
  grpu46anySequence2: scorm.v12.Grpu46anySequence,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty
):
  lazy val default = attributes.get("@default") map { _.as[String] }

case class OrganizationType(
  title: Option[String] = None,
  item: Seq[scorm.v12.ItemType] = Nil,
  metadata: Option[scorm.v12.MetadataType] = None,
  grpu46anySequence4: scorm.v12.Grpu46anySequence,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty
):
  lazy val identifier = attributes("@identifier").as[String]
  lazy val structure  = attributes("@structure").as[String]

case class ResourcesType(
  resource: Seq[scorm.v12.ResourceType] = Nil,
  grpu46anySequence2: scorm.v12.Grpu46anySequence,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty
):
  lazy val xmlbase = attributes.get("@{http://www.w3.org/XML/1998/namespace}base") map { _.as[java.net.URI] }

case class ResourceType(
  metadata: Option[scorm.v12.MetadataType] = None,
  file: Seq[scorm.v12.FileType] = Nil,
  dependency: Seq[scorm.v12.DependencyType] = Nil,
  grpu46anySequence4: scorm.v12.Grpu46anySequence,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty
):
  lazy val identifier = attributes("@identifier").as[String]
  lazy val typeValue  = attributes("@type").as[String]
  lazy val xmlbase    = attributes.get("@{http://www.w3.org/XML/1998/namespace}base") map { _.as[java.net.URI] }
  lazy val href       = attributes.get("@href") map { _.as[java.net.URI] }
end ResourceType

case class Grpu46anySequence(any: scalaxb.DataRecord[Any]*)

case class Attru46version(version: Option[String] = None)

case class Attru46resourcetypeu46req(typeValue: String)

case class Attru46identifierref(identifierref: Option[String] = None)

case class Attru46isvisible(isvisible: Option[Boolean] = None)

case class Attru46identifieru46req(identifier: String)

case class Attru46href(href: Option[java.net.URI] = None)

case class Attru46base(xmlbase: Option[java.net.URI] = None)

case class Attru46default(default: Option[String] = None)

case class Attru46hrefu46req(href: java.net.URI)

case class Attru46identifier(identifier: Option[String] = None)

case class Attru46parameters(parameters: Option[String] = None)

case class Attru46identifierrefu46req(identifierref: String)

case class Attru46structureu46req(structure: String)
