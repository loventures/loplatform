/*!
 * LO Platform copyright (C) 2007â€“2025 LO Ventures LLC.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

@use 'react-circular-progressbar/dist/styles.css';
@use 'summernote/dist/summernote-lite.css';
@use '../scripts/code/summernote-text-findnreplace-lite.css';
@use '../scripts/code/override-summernote-styles.css';

@import 'custom';

$topnav-height: 3.5rem;
$actionbar-height: 3rem;

:root {
  --actionbar-offset: 0rem; // $topnav-height
}

html {
  scroll-padding-top: $actionbar-height;
}

body {
  overflow-y: scroll;
  overflow-anchor: none;
}

a:not(:hover) {
  text-decoration: none;
}

#navbar-dropdown::after {
  vertical-align: middle;
  display: none;
}

@media (min-width: $smscreen) {
  #navbar-dropdown::after {
    display: inline-block;
  }
}

.bprogress {
  .bar {
    background: #0275d8 !important;
  }

  .peg {
    box-shadow: 0 0 10px #0275d8,
    0 0 5px #0275d8 !important;
  }
}

.grid-container {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-rows: 3.5rem 3rem 1fr;
  grid-template-areas:
    'topnav topnav topnav'
    'actionbar actionbar feedback'
    'structure-panel main feedback';

  .grid-topnav {
    grid-area: topnav;
    height: $topnav-height;
    z-index: 100;

    &.production {
      background: repeating-linear-gradient(
                      -45deg,
                      #ece81a,
                      #ece81a 10px,
                      $gray-500 10px,
                      $gray-500 20px
      );
    }
  }

  .grid-actionbar {
    grid-area: actionbar;
    background-color: $gray-100;
    position: sticky;
    top: 0;
    height: $actionbar-height;
    z-index: 90;
    transition: all $transition-function $transition-speed;
  }

  .zero-show {
    display: none;
  }

  &.zero-nav {
    .grid-actionbar {
      background-color: white;
      box-shadow: 0 4px 7px -2px rgb(38 50 56 / 12%);
    }

    .zero-show {
      display: inherit;
    }
  }

  .grid-structure-panel {
    grid-area: structure-panel;
    position: sticky;
    left: 0;
    top: calc($actionbar-height + var(--actionbar-offset));
    width: 23rem;
    height: calc(100vh - $actionbar-height - var(--actionbar-offset));
    opacity: 1;
    transition: width 100ms ease-out,
    opacity 100ms ease-out;
    z-index: 89;
  }

  @media (max-width: $lgscreen) {
    .grid-structure-panel {
      grid-area: auto;
      position: fixed;
    }
  }

  .grid-main {
    grid-area: main;
    min-width: 0;
    min-height: calc(100vh - $actionbar-height - var(--actionbar-offset));
    transition: padding 100ms ease-out;
  }

  > .grid-feedback {
    grid-area: feedback;
    z-index: 95;
    width: 0;
    transition: width 100ms ease-out;

    &.structural,
    &.detail,
    &.narrative:not(.inline) {
      position: sticky;
      top: var(--actionbar-offset);
      height: calc(100vh - var(--actionbar-offset));
    }
  }

  @media (max-width: $lgscreen) {
    > .grid-feedback {
      grid-area: auto;
      position: fixed !important;
      right: 0;
    }
  }

  &.structure-hidden {
    .grid-structure-panel {
      width: 0;
      opacity: 0;
    }

    .grid-main {
      padding-left: 0;
    }
  }
}

$color-primary: $primary; // fixes references to color-primary

// @TODO text-hide has been deprecated
// deprecated bootstrap vars @TODO remove in hackathon ?
$navbar-inverse-color: lighten($gray-400, 15%);
$cursor-disabled: not-allowed;

// @TODO what happened to icon buttons from lo-ui?
.active-icon {
  color: $color-primary;
}

.material-icons {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-feature-settings: 'liga';
  -webkit-font-smoothing: antialiased;
}

/* Rules for sizing material icons. */

.material-icons.md-18 {
  font-size: 18px;
}

.material-icons.md-24 {
  font-size: 24px;
}

.material-icons.md-36 {
  font-size: 36px;
}

.material-icons.md-48 {
  font-size: 48px;
}

body {
  background-color: $gray-100;
  -webkit-font-smoothing: antialiased;
  overflow-x: hidden;
}

.navbar {
  background-color: #fff;
  box-shadow: 0 4px 7px -2px rgb(38 50 56 / 12%);
  border-bottom: 1px solid #d5d5d5;
  flex-wrap: nowrap;

  .main-navbar-logo {
    max-height: 2rem;

    &.dark-only {
      display: none;
    }
  }

  .nav {
    flex-wrap: nowrap;
    white-space: nowrap;
  }

  .nav-inactive {
    color: $navbar-inverse-color;
  }

  .nav-link {
    color: #676767;
  }
}

img,
audio,
video {
  max-width: 100%;
}

// TODO: make this a utility
.hnav-group,
.asset-type-checkboxes-list {
  list-style: none;
  padding: 0;

  ul {
    list-style: none;
    padding: 0;
  }
}

.hnav-group-name {
  font-weight: bold;
}

.load-bars {
  rect {
    fill: $primary;
  }
}

.btn-primary .load-bars {
  rect {
    fill: $white;
  }
}

.loading {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.sidebar-collapse {
  @extend .btn;
  @extend .btn-secondary;
  height: 3rem;
  width: 2rem;
  left: calc(25% - 0.75em);
  padding: 0;
  top: 2rem;
  bottom: 0;
  margin: auto;
  position: fixed;
  z-index: $zindex-fixed;
  transition: none;

  &.collapsed {
    left: 0;
  }
}

.breadcrumb {
  background: transparent;
  padding: 0;
  margin: 0;
}

.more-toggle:not(:hover) {
  background-color: transparent;
}

// Bootstrap 3 shim
.in,
.open {
  @extend .show;
}

.pagination {
  .active a {
    z-index: 2;
    color: #fff;
    background-color: $primary;
    border-color: $primary;
  }

  a {
    @extend .page-link;
  }
}

.progress {
  width: 100%;
}

.progress-bar-success {
  @extend .bg-success;
}

.progress-bar-info {
  @extend .bg-info;
}

.progress-bar-warning {
  @extend .bg-warning;
}

.progress-bar-danger {
  @extend .bg-danger;
}

// Angular bootstrap dropdown hide caret.
.hide-dropdown-toggle {
  &:after {
    display: none;
  }
}

// TODO: fix hack
.modal-dialog {
  padding: 0 1.5rem;
}

// TODO: move to framework
a,
.pointer {
  cursor: pointer;
}

.cursor-disabled {
  cursor: $cursor-disabled;
}

.alert {
  margin-bottom: 0;
}

.has-error {
  color: $danger;
}

.disabled {
  a {
    cursor: $cursor-disabled;
    opacity: 0.65;
    @include box-shadow(none);
  }
}

.tree-border {
  margin-right: 0.25rem;
  height: 50%;
  width: 0.5rem;
  border-bottom: 1px solid $gray-400;
  border-left: 1px solid $gray-400;
}

.ng-invalid-min:not([disabled]),
.ng-invalid-min.form-control:focus {
  border-color: #c23e30;
}

.announcements-alert {
  border-top: 0;
  margin-top: 0;
  border-radius: 0;
  margin-bottom: 0;
  position: relative;
  width: 100%;
}

.announcement-alert-close {
  background-color: transparent;
}

.alert-inner-html > :last-child {
  margin-bottom: 0;
}

.no-action-bar nav {
  width: 100%;
  position: fixed;
}

div.popover {
  padding: 10px;
}

#preview-course-content .custom-switch {
  vertical-align: middle;
  margin-right: 0.25rem;
}

#preview-course-content .check-option {
  padding-left: 0.75rem;

  &::before {
    font-family: 'Material Icons';
    font-weight: normal;
    font-style: normal;
    font-size: 1rem;
    line-height: 1;
    letter-spacing: normal;
    text-transform: none;
    display: inline-block;
    width: 1.5rem;
    white-space: nowrap;
    word-wrap: normal;
    direction: ltr;
    -webkit-font-feature-settings: 'liga';
    -webkit-font-smoothing: antialiased;
    content: '';
    vertical-align: text-top;
  }

  &.checked::before {
    content: 'check';
  }
}

button.btn-transparent:disabled,
a.btn-transparent.disabled {
  background-color: transparent !important;
  color: $gray-500 !important;
}

button.unhover-muted,
a.unhover-muted {
  &:not(:hover) {
    color: $text-muted;
  }
}

button,
a {
  &:not(:hover) {
    .unhover-muted {
      color: $text-muted;
    }
  }
}

button.hover-white,
a.hover-white {
  &:hover {
    color: white;
  }
}

a.no-decoration {
  text-decoration: none;
  outline: none;

  &:hover,
  &:focus {
    .hover-underline {
      text-decoration: underline;
    }
  }
}

svg.access-restricted {
  vertical-align: text-top;
  color: #cb6015;

  &.access-author {
    color: #572909;
  }
}

.structure-item svg.access-restricted {
  vertical-align: -1px;
}

// in structure panel / playlist editor
span.has-feedback {
  color: #9c284b;
}

.mini-button {
  border: none;

  &:disabled,
  &.disabled {
    background: transparent !important;
  }
}

.btn-transparent:not(.secret-toggle):hover {
  background: $gray-300;
  border-color: $gray-300;
}

.dropbox-table {
  table-layout: fixed;

  tr {
    &:first-child td {
      border-top: none;
    }

    td {
      background-color: white;
      transition: background-color linear 0.1s;
    }

    a:hover .linky {
      text-decoration: underline;
    }

    &:hover:not(.inactive) {
      td {
        background-color: #ccf6ff;
      }
    }
  }
}

.input-padding {
  display: inline-block;
  padding: calc(0.375rem + 1px) calc(0.75rem + 1px);
}

.secret-input {
  &:not(:focus):not(.is-invalid),
  &:disabled {
    //background: transparent;
    border-color: transparent;
  }

  &:not(:disabled):not(.disabled):hover,
  &:focus-within {
    box-shadow: $input-focus-box-shadow;
  }
}

.flashy-box-shadow {
  box-shadow: none;
  border-radius: $border-radius;

  &.flash {
    box-shadow: $input-focus-box-shadow;
  }

  &:not(.flash) {
    transition: box-shadow $transition-function $transition-speed;
  }
}

// all these are important because it uses inline styles.
.react-numeric-input {
  border-radius: $border-radius;
  transition: all $transition-function $transition-speed;

  .secret-input:not(.bg-white) {
    background: transparent !important;
  }

  .secret-input:disabled {
    color: #aaa !important;
  }

  &:focus-within .secret-input {
    background: white !important;
  }

  //&:hover, &:focus-within {
  //  box-shadow: $input-focus-box-shadow;
  //
  //  .secret-input {
  //    box-shadow: none !important;
  //  }
  //}

  b {
    transition: all $transition-function $transition-speed !important;
    box-shadow: none !important;
    border: 1px solid transparent !important;
    border-radius: 3px !important;

    background: none !important;

    i {
      transition: all $transition-function $transition-speed !important;
    }

    &:hover {
      border: 1px solid $gray-400 !important;
    }

    &:first-of-type {
      i {
        top: 45% !important;
        border-color: transparent transparent transparentize($gray-900, 0.5) !important;
      }

      &:hover i {
        border-color: transparent transparent transparentize($gray-900, 0.25) !important;
      }
    }

    &:last-of-type {
      i {
        top: 55% !important;
        border-color: transparentize($gray-900, 0.5) transparent transparent !important;
      }

      &:hover i {
        border-color: transparentize($gray-900, 0.25) transparent transparent !important;
      }
    }
  }
}

// horrid but i can't put classes on the component
.hide-nudge-arrows {
  .react-numeric-input {
    b {
      opacity: 0;
    }

    &:hover,
    &:focus-within {
      b {
        opacity: 1;
      }
    }
  }
}

.minw-0 {
  min-width: 0;
}

.gap-1 {
  gap: 0.25rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-3 {
  gap: 1rem;
}

.br-50 {
  border-radius: 50%;
}

.modal-header > h3 {
  margin-bottom: 0;
}

.btn-secondary.unbordered:not(:hover):not(:focus) {
  border-color: white;
}

.btn-outline-warning {
  color: darken($warning, 22%);
  border-color: darken($warning, 22%);
}

.mb-last-p-0 > p:last-child {
  margin-bottom: 0;
}

.react-select-focused {
  border-color: $primary !important;
  box-shadow: $input-focus-box-shadow !important;
}

.dropbox,
.feedback-app,
.narrative-mode {
  min-height: calc(100vh - $actionbar-height);
}

#hdr-project-code .text-warning {
  color: darken($warning, 22%) !important;
}

@media print {
  #navbar,
  #action-bar,
  #project-nav,
  .feedback-icon,
  .add-content,
  .feedback-header,
  .page-number,
  .page-number-cluster,
  .page-number-nub,
  .asset-settings,
  .asset-preview {
    display: none !important;
  }
  .grid-container {
    display: grid;
    grid-template-columns: 0 auto 1fr;
    grid-template-rows: 0 0 1fr;
  }
}

@media (prefers-color-scheme: dark) {
  .navbar .main-navbar-logo.dark-only {
    display: block;
  }
  .navbar .main-navbar-logo.light-only {
    display: none;
  }
}

@import 'default-variables';
@import 'variables';
// Lodactor goes here so go it can get the domain styles
@import 'lodactor'; // TODO: migrate this

$color-primary: $primary; // fixes references to color-primary

@import 'announcement';
@import 'competency';
@import 'bin-drop'; // TODO: migrate this?
@import 'matching';
@import 'panels';
@import 'toasts';
@import 'presence';
@import 'chat';
@import 'feedback';
@import 'narrative';
